#############################################################################
# Makefile for building: libUpdateManager.so.1.0.0
# Generated by qmake (2.01a) (Qt 4.7.4) on: Wed Nov 22 18:19:27 2017
# Project:  UpdateManager.pro
# Template: lib
# Command: /usr/bin/qmake-qt4 -spec /usr/share/qt4/mkspecs/linux-g++-32 -o Makefile UpdateManager.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_WEBKIT -DUPDATEMANAGER_LIBRARY -DZIP_STD -DQT_NO_DEBUG -DQT_XML_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -m32 -pipe -O2 -Wall -W -D_REENTRANT -fPIC $(DEFINES)
CXXFLAGS      = -m32 -pipe -O2 -Wall -W -D_REENTRANT -fPIC $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++-32 -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtNetwork -I/usr/include/qt4/QtXml -I/usr/include/qt4 -I. -I../CommonBus -I../include -I.
LINK          = g++
LFLAGS        = -m32 -Wl,-O1 -shared -Wl,-soname,libUpdateManager.so.1
LIBS          = $(SUBLIBS)  -L/usr/lib/i386-linux-gnu -L../lib -lCommonBus -lQtXml -lQtNetwork -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake-qt4
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = UpdateManager.cpp \
		json/json_reader.cpp \
		json/json_value.cpp \
		json/json_writer.cpp \
		FileManager/FileManager.cpp \
		FileManager/ReadVersionXml.cpp \
		UpdateConfirm/UpdateConfirm.cpp \
		UpdateDownLoad/UpdateDownLoad.cpp \
		UpdateHttp/UpdateFromHttpManager.cpp \
		UpdateQuery/UpdateQuery.cpp \
		UpdateHttp/TestResponse.cpp \
		ZipManager/zip.cpp \
		ZipManager/unzip.cpp \
		UpdateCommon.cpp moc_UpdateManager.cpp \
		moc_UpdateDownLoad.cpp \
		moc_UpdateFromHttpManager.cpp \
		moc_UpdateQuery.cpp \
		moc_UpdateHttpTimeOut.cpp
OBJECTS       = UpdateManager.o \
		json_reader.o \
		json_value.o \
		json_writer.o \
		FileManager.o \
		ReadVersionXml.o \
		UpdateConfirm.o \
		UpdateDownLoad.o \
		UpdateFromHttpManager.o \
		UpdateQuery.o \
		TestResponse.o \
		zip.o \
		unzip.o \
		UpdateCommon.o \
		moc_UpdateManager.o \
		moc_UpdateDownLoad.o \
		moc_UpdateFromHttpManager.o \
		moc_UpdateQuery.o \
		moc_UpdateHttpTimeOut.o
DIST          = json/sconscript \
		/usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		UpdateManager.pro
QMAKE_TARGET  = UpdateManager
DESTDIR       = ../loadLib/
TARGET        = libUpdateManager.so
TARGETA       = ../loadLib/libUpdateManager.a
TARGETD       = libUpdateManager.so
TARGET0       = libUpdateManager.so
TARGET1       = libUpdateManager.so.1
TARGET2       = libUpdateManager.so.1.0

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile  ../loadLib/$(TARGET)

../loadLib/$(TARGET):  $(OBJECTS) $(SUBLIBS) $(OBJCOMP)  
	@$(CHK_DIR_EXISTS) ../loadLib/ || $(MKDIR) ../loadLib/ 
	-$(DEL_FILE) $(TARGET) $(TARGET0) $(TARGET1) $(TARGET2)
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(LIBS) $(OBJCOMP)
	#-ln -s $(TARGET) $(TARGET0)
	#-ln -s $(TARGET) $(TARGET1)
	#-ln -s $(TARGET) $(TARGET2)
	-$(DEL_FILE) ../loadLib/$(TARGET)
	-$(DEL_FILE) ../loadLib/$(TARGET0)
	-$(DEL_FILE) ../loadLib/$(TARGET1)
	-$(DEL_FILE) ../loadLib/$(TARGET2)
	-$(MOVE) $(TARGET) $(TARGET0) $(TARGET1) $(TARGET2) ../loadLib/



staticlib: $(TARGETA)

$(TARGETA):  $(OBJECTS) $(OBJCOMP) 
	-$(DEL_FILE) $(TARGETA) 
	$(AR) $(TARGETA) $(OBJECTS)

Makefile: UpdateManager.pro  /usr/share/qt4/mkspecs/linux-g++-32/qmake.conf /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/i386-linux-gnu/libQtXml.prl \
		/usr/lib/i386-linux-gnu/libQtNetwork.prl \
		/usr/lib/i386-linux-gnu/libQtCore.prl
	$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++-32 -o Makefile UpdateManager.pro
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/i386-linux-gnu/libQtXml.prl:
/usr/lib/i386-linux-gnu/libQtNetwork.prl:
/usr/lib/i386-linux-gnu/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++-32 -o Makefile UpdateManager.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/UpdateManager1.0.0 || $(MKDIR) .tmp/UpdateManager1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/UpdateManager1.0.0/ && $(COPY_FILE) --parents UpdateManager.h FileManager.h json/autolink.h json/config.h json/features.h json/forwards.h json/json.h json/json_batchallocator.h json/reader.h json/value.h json/writer.h UpdateManagerGlobal.h ReadVersionXml.h UpdateFromHttpManager.h UpdateQuery.h UpdateDownLoad.h FileManager/FileManager.h FileManager/ReadVersionXml.h UpdateConfirm/UpdateConfirm.h UpdateDownLoad/UpdateDownLoad.h UpdateHttp/UpdateFromHttpManager.h UpdateQuery/UpdateQuery.h UpdateHttp/UpdateHttpTimeOut.h UpdateHttp/TestResponse.h ZipManager/zip.h ZipManager/unzip.h UpdateCommon.h .tmp/UpdateManager1.0.0/ && $(COPY_FILE) --parents UpdateManager.cpp json/json_reader.cpp json/json_value.cpp json/json_writer.cpp FileManager/FileManager.cpp FileManager/ReadVersionXml.cpp UpdateConfirm/UpdateConfirm.cpp UpdateDownLoad/UpdateDownLoad.cpp UpdateHttp/UpdateFromHttpManager.cpp UpdateQuery/UpdateQuery.cpp UpdateHttp/TestResponse.cpp ZipManager/zip.cpp ZipManager/unzip.cpp UpdateCommon.cpp .tmp/UpdateManager1.0.0/ && (cd `dirname .tmp/UpdateManager1.0.0` && $(TAR) UpdateManager1.0.0.tar UpdateManager1.0.0 && $(COMPRESS) UpdateManager1.0.0.tar) && $(MOVE) `dirname .tmp/UpdateManager1.0.0`/UpdateManager1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/UpdateManager1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) ../loadLib/$(TARGET) 
	-$(DEL_FILE) ../loadLib/$(TARGET0) ../loadLib/$(TARGET1) ../loadLib/$(TARGET2) $(TARGETA)
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_UpdateManager.cpp moc_UpdateDownLoad.cpp moc_UpdateFromHttpManager.cpp moc_UpdateQuery.cpp moc_UpdateHttpTimeOut.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_UpdateManager.cpp moc_UpdateDownLoad.cpp moc_UpdateFromHttpManager.cpp moc_UpdateQuery.cpp moc_UpdateHttpTimeOut.cpp
moc_UpdateManager.cpp: FileManager/ReadVersionXml.h \
		UpdateManagerGlobal.h \
		UpdateManager.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) UpdateManager.h -o moc_UpdateManager.cpp

moc_UpdateDownLoad.cpp: UpdateManagerGlobal.h \
		UpdateCommon.h \
		FileManager/ReadVersionXml.h \
		UpdateDownLoad/UpdateDownLoad.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) UpdateDownLoad/UpdateDownLoad.h -o moc_UpdateDownLoad.cpp

moc_UpdateFromHttpManager.cpp: UpdateHttp/UpdateFromHttpManager.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) UpdateHttp/UpdateFromHttpManager.h -o moc_UpdateFromHttpManager.cpp

moc_UpdateQuery.cpp: UpdateManagerGlobal.h \
		FileManager/ReadVersionXml.h \
		UpdateCommon.h \
		UpdateQuery/UpdateQuery.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) UpdateQuery/UpdateQuery.h -o moc_UpdateQuery.cpp

moc_UpdateHttpTimeOut.cpp: UpdateHttp/UpdateHttpTimeOut.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) UpdateHttp/UpdateHttpTimeOut.h -o moc_UpdateHttpTimeOut.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

UpdateManager.o: UpdateManager.cpp FileManager/FileManager.h \
		UpdateManager.h \
		FileManager/ReadVersionXml.h \
		UpdateManagerGlobal.h \
		json/json.h \
		json/autolink.h \
		json/config.h \
		json/value.h \
		json/forwards.h \
		json/reader.h \
		json/features.h \
		json/writer.h \
		UpdateConfirm/UpdateConfirm.h \
		UpdateCommon.h \
		UpdateDownLoad/UpdateDownLoad.h \
		UpdateQuery/UpdateQuery.h \
		UpdateHttp/UpdateFromHttpManager.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o UpdateManager.o UpdateManager.cpp

json_reader.o: json/json_reader.cpp json/reader.h \
		json/features.h \
		json/forwards.h \
		json/config.h \
		json/value.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o json_reader.o json/json_reader.cpp

json_value.o: json/json_value.cpp json/value.h \
		json/forwards.h \
		json/config.h \
		json/writer.h \
		json/json_batchallocator.h \
		json/json_internalarray.inl \
		json/json_internalmap.inl \
		json/json_valueiterator.inl
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o json_value.o json/json_value.cpp

json_writer.o: json/json_writer.cpp json/writer.h \
		json/value.h \
		json/forwards.h \
		json/config.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o json_writer.o json/json_writer.cpp

FileManager.o: FileManager/FileManager.cpp FileManager/FileManager.h \
		json/json.h \
		json/autolink.h \
		json/config.h \
		json/value.h \
		json/forwards.h \
		json/reader.h \
		json/features.h \
		json/writer.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o FileManager.o FileManager/FileManager.cpp

ReadVersionXml.o: FileManager/ReadVersionXml.cpp FileManager/ReadVersionXml.h \
		UpdateManagerGlobal.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ReadVersionXml.o FileManager/ReadVersionXml.cpp

UpdateConfirm.o: UpdateConfirm/UpdateConfirm.cpp UpdateConfirm/UpdateConfirm.h \
		UpdateManagerGlobal.h \
		UpdateCommon.h \
		json/json.h \
		json/autolink.h \
		json/config.h \
		json/value.h \
		json/forwards.h \
		json/reader.h \
		json/features.h \
		json/writer.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o UpdateConfirm.o UpdateConfirm/UpdateConfirm.cpp

UpdateDownLoad.o: UpdateDownLoad/UpdateDownLoad.cpp UpdateDownLoad/UpdateDownLoad.h \
		UpdateManagerGlobal.h \
		UpdateCommon.h \
		FileManager/ReadVersionXml.h \
		json/json.h \
		json/autolink.h \
		json/config.h \
		json/value.h \
		json/forwards.h \
		json/reader.h \
		json/features.h \
		json/writer.h \
		ZipManager/zip.h \
		ZipManager/unzip.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o UpdateDownLoad.o UpdateDownLoad/UpdateDownLoad.cpp

UpdateFromHttpManager.o: UpdateHttp/UpdateFromHttpManager.cpp UpdateHttp/UpdateFromHttpManager.h \
		UpdateManagerGlobal.h \
		UpdateHttp/UpdateHttpTimeOut.h \
		UpdateHttp/TestResponse.h \
		json/json.h \
		json/autolink.h \
		json/config.h \
		json/value.h \
		json/forwards.h \
		json/reader.h \
		json/features.h \
		json/writer.h \
		UpdateCommon.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o UpdateFromHttpManager.o UpdateHttp/UpdateFromHttpManager.cpp

UpdateQuery.o: UpdateQuery/UpdateQuery.cpp UpdateQuery/UpdateQuery.h \
		UpdateManagerGlobal.h \
		FileManager/ReadVersionXml.h \
		UpdateCommon.h \
		json/json.h \
		json/autolink.h \
		json/config.h \
		json/value.h \
		json/forwards.h \
		json/reader.h \
		json/features.h \
		json/writer.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o UpdateQuery.o UpdateQuery/UpdateQuery.cpp

TestResponse.o: UpdateHttp/TestResponse.cpp UpdateHttp/TestResponse.h \
		json/json.h \
		json/autolink.h \
		json/config.h \
		json/value.h \
		json/forwards.h \
		json/reader.h \
		json/features.h \
		json/writer.h \
		UpdateCommon.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o TestResponse.o UpdateHttp/TestResponse.cpp

zip.o: ZipManager/zip.cpp ZipManager/zip.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o zip.o ZipManager/zip.cpp

unzip.o: ZipManager/unzip.cpp ZipManager/unzip.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o unzip.o ZipManager/unzip.cpp

UpdateCommon.o: UpdateCommon.cpp UpdateCommon.h \
		UpdateManagerGlobal.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o UpdateCommon.o UpdateCommon.cpp

moc_UpdateManager.o: moc_UpdateManager.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_UpdateManager.o moc_UpdateManager.cpp

moc_UpdateDownLoad.o: moc_UpdateDownLoad.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_UpdateDownLoad.o moc_UpdateDownLoad.cpp

moc_UpdateFromHttpManager.o: moc_UpdateFromHttpManager.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_UpdateFromHttpManager.o moc_UpdateFromHttpManager.cpp

moc_UpdateQuery.o: moc_UpdateQuery.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_UpdateQuery.o moc_UpdateQuery.cpp

moc_UpdateHttpTimeOut.o: moc_UpdateHttpTimeOut.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_UpdateHttpTimeOut.o moc_UpdateHttpTimeOut.cpp

####### Install

install_target: first FORCE
	@$(CHK_DIR_EXISTS) $(INSTALL_ROOT)/usr/lib/ || $(MKDIR) $(INSTALL_ROOT)/usr/lib/ 
	-$(INSTALL_PROGRAM) "../loadLib/$(TARGET)" "$(INSTALL_ROOT)/usr/lib/$(TARGET)"
	-$(STRIP) --strip-unneeded "$(INSTALL_ROOT)/usr/lib/$(TARGET)"
	-$(SYMLINK) "$(TARGET)" "$(INSTALL_ROOT)/usr/lib/$(TARGET0)"
	-$(SYMLINK) "$(TARGET)" "$(INSTALL_ROOT)/usr/lib/$(TARGET1)"
	-$(SYMLINK) "$(TARGET)" "$(INSTALL_ROOT)/usr/lib/$(TARGET2)"

uninstall_target:  FORCE
	-$(DEL_FILE) "$(INSTALL_ROOT)/usr/lib/$(TARGET)" 
	 -$(DEL_FILE) "$(INSTALL_ROOT)/usr/lib/$(TARGET0)" 
	 -$(DEL_FILE) "$(INSTALL_ROOT)/usr/lib/$(TARGET1)" 
	 -$(DEL_FILE) "$(INSTALL_ROOT)/usr/lib/$(TARGET2)"
	-$(DEL_DIR) $(INSTALL_ROOT)/usr/lib/ 


install:  install_target  FORCE

uninstall: uninstall_target   FORCE

FORCE:

